service:
  name: yoki

plugins:
  - serverless-python-requirements
  - serverless-dynamodb-autoscaling

custom:
  instance_state_table: ${opt:stage, 'dev'}-${self:service}-ECSCtrInstanceState
  task_state_table: ${opt:stage, 'dev'}-${self:service}-ECSTaskState
  task_digest_table: ${opt:stage, 'dev'}-${self:service}-ECSTaskDigest
  capacities:
    - table: ECSTaskDigest  # Autoscale Digest Table read/write
      read:
        minimum: 5          # Minimum read capacity
        maximum: 50         # Maximum read capacity
        usage: 0.75         # Usage percentage
      write:
        minimum: 5
        maximum: 50
        usage: 0.5

  pythonRequirements:
    dockerizePip: true


provider:
  name: aws
  runtime: python3.6
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:Batch*"
        - "dynamodb:GetItem"
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:PutItem"
      Resource:
        - "arn:aws:dynamodb:*:*:table/${self:custom.instance_state_table}"
        - "arn:aws:dynamodb:*:*:table/${self:custom.task_state_table}"
        - "arn:aws:dynamodb:*:*:table/${self:custom.task_digest_table}"
    - Effect: "Allow"
      Action:
        - "ecs:Describe*"
        - "ecs:List*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "ecr:DescribeRepositories"
        - "ecr:DescribeImages"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "ecs:Describe*"
        - "ecs:List*"
        - "ecs:UpdateService"
        - "ecs:RegisterTaskDefinition"
        - "application-autoscaling:RegisterScalableTarget"
        - "iam:PassRole"
      Resource: "*"


functions:
  ecs-event-handler:
    name: ${self:service}-ecs-event-handler
    handler: lambdas.ecs_event.lambda_handler
    description: Store ECS events in dynamodb
    memorySize: 128
    timeout: 60
    reservedConcurrency: 1
    environment: ${file(.env.yml):lambda.environment}
    events:
      - cloudwatchEvent:
          event:
            source:
              - "aws.ecs"
            detail-type:
              - "ECS Task State Change"
              - "ECS Container Instance State Change"

resources:
  Resources:
    ECSCtrInstanceState:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.instance_state_table}
        AttributeDefinitions:
          - AttributeName: containerInstanceArn
            AttributeType: S
        KeySchema:
          - AttributeName: containerInstanceArn
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TimeToLiveSpecification:
          AttributeName: TTL
          Enabled: True

    ECSTaskState:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.task_state_table}
        AttributeDefinitions:
          - AttributeName: taskArn
            AttributeType: S
        KeySchema:
          - AttributeName: taskArn
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TimeToLiveSpecification:
          AttributeName: TTL
          Enabled: True

    ECSTaskDigest:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.task_digest_table}
        AttributeDefinitions:
          - AttributeName: startedBy
            AttributeType: S
        KeySchema:
          - AttributeName: startedBy
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TimeToLiveSpecification:
          AttributeName: TTL
          Enabled: True
